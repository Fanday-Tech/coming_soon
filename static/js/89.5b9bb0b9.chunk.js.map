{"version":3,"file":"static/js/89.5b9bb0b9.chunk.js","mappings":"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G,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAC5I,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAC5I,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAC5I,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,GAAI,OAAQ,GAC7I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,MAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAAI,OAAQ,GAC5I,OAAQ,GAAI,OAAQ,IAEtBC,IAAK,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7EC,IAAK,CACH,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EA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","sources":["components/sketch/OpenSimplexNoise.js","components/sketch/sketch.js"],"sourcesContent":["// Plain JS version of Josh Forisha's implementation of opensimplex noise\r\n// https://github.com/joshforisha/open-simplex-noise-js\r\n// This version is currently posted here https://gist.github.com/PARC6502/85c99c04c9b3c6ae52c3c27605b4df0a\r\n// Will probably be cleaned up and have its own repo, at some point...\r\n\r\n\"use strict\";\r\nvar OpenSimplexNoise;\r\n\r\n(function () {\r\n  var constants_1 = {\r\n    NORM_2D: 1.0 / 47.0,\r\n    NORM_3D: 1.0 / 103.0,\r\n    NORM_4D: 1.0 / 30.0,\r\n    SQUISH_2D: (Math.sqrt(2 + 1) - 1) / 2,\r\n    SQUISH_3D: (Math.sqrt(3 + 1) - 1) / 3,\r\n    SQUISH_4D: (Math.sqrt(4 + 1) - 1) / 4,\r\n    STRETCH_2D: (1 / Math.sqrt(2 + 1) - 1) / 2,\r\n    STRETCH_3D: (1 / Math.sqrt(3 + 1) - 1) / 3,\r\n    STRETCH_4D: (1 / Math.sqrt(4 + 1) - 1) / 4,\r\n    base2D: [\r\n      [1, 1, 0, 1, 0, 1, 0, 0, 0],\r\n      [1, 1, 0, 1, 0, 1, 2, 1, 1],\r\n    ],\r\n    base3D: [\r\n      [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1],\r\n      [2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1, 3, 1, 1, 1],\r\n      [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1],\r\n    ],\r\n    base4D: [\r\n      [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1],\r\n      [3, 1, 1, 1, 0, 3, 1, 1, 0, 1, 3, 1, 0, 1, 1, 3, 0, 1, 1, 1, 4, 1, 1, 1, 1],\r\n      [\r\n        1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 2, 1, 1, 0, 0, 2, 1, 0, 1, 0, 2, 1, 0, 0, 1, 2, 0, 1, 1, 0, 2, 0, 1, 0, 1, 2, 0,\r\n        0, 1, 1,\r\n      ],\r\n      [\r\n        3, 1, 1, 1, 0, 3, 1, 1, 0, 1, 3, 1, 0, 1, 1, 3, 0, 1, 1, 1, 2, 1, 1, 0, 0, 2, 1, 0, 1, 0, 2, 1, 0, 0, 1, 2, 0, 1, 1, 0, 2, 0, 1, 0, 1, 2, 0,\r\n        0, 1, 1,\r\n      ],\r\n    ],\r\n    gradients2D: [5, 2, 2, 5, -5, 2, -2, 5, 5, -2, 2, -5, -5, -2, -2, -5],\r\n    gradients3D: [\r\n      -11, 4, 4, -4, 11, 4, -4, 4, 11, 11, 4, 4, 4, 11, 4, 4, 4, 11, -11, -4, 4, -4, -11, 4, -4, -4, 11, 11, -4, 4, 4, -11, 4, 4, -4, 11, -11, 4, -4,\r\n      -4, 11, -4, -4, 4, -11, 11, 4, -4, 4, 11, -4, 4, 4, -11, -11, -4, -4, -4, -11, -4, -4, -4, -11, 11, -4, -4, 4, -11, -4, 4, -4, -11,\r\n    ],\r\n    gradients4D: [\r\n      3, 1, 1, 1, 1, 3, 1, 1, 1, 1, 3, 1, 1, 1, 1, 3, -3, 1, 1, 1, -1, 3, 1, 1, -1, 1, 3, 1, -1, 1, 1, 3, 3, -1, 1, 1, 1, -3, 1, 1, 1, -1, 3, 1, 1,\r\n      -1, 1, 3, -3, -1, 1, 1, -1, -3, 1, 1, -1, -1, 3, 1, -1, -1, 1, 3, 3, 1, -1, 1, 1, 3, -1, 1, 1, 1, -3, 1, 1, 1, -1, 3, -3, 1, -1, 1, -1, 3, -1,\r\n      1, -1, 1, -3, 1, -1, 1, -1, 3, 3, -1, -1, 1, 1, -3, -1, 1, 1, -1, -3, 1, 1, -1, -1, 3, -3, -1, -1, 1, -1, -3, -1, 1, -1, -1, -3, 1, -1, -1, -1,\r\n      3, 3, 1, 1, -1, 1, 3, 1, -1, 1, 1, 3, -1, 1, 1, 1, -3, -3, 1, 1, -1, -1, 3, 1, -1, -1, 1, 3, -1, -1, 1, 1, -3, 3, -1, 1, -1, 1, -3, 1, -1, 1,\r\n      -1, 3, -1, 1, -1, 1, -3, -3, -1, 1, -1, -1, -3, 1, -1, -1, -1, 3, -1, -1, -1, 1, -3, 3, 1, -1, -1, 1, 3, -1, -1, 1, 1, -3, -1, 1, 1, -1, -3, -3,\r\n      1, -1, -1, -1, 3, -1, -1, -1, 1, -3, -1, -1, 1, -1, -3, 3, -1, -1, -1, 1, -3, -1, -1, 1, -1, -3, -1, 1, -1, -1, -3, -3, -1, -1, -1, -1, -3, -1,\r\n      -1, -1, -1, -3, -1, -1, -1, -1, -3,\r\n    ],\r\n    lookupPairs2D: [0, 1, 1, 0, 4, 1, 17, 0, 20, 2, 21, 2, 22, 5, 23, 5, 26, 4, 39, 3, 42, 4, 43, 3],\r\n    lookupPairs3D: [\r\n      0, 2, 1, 1, 2, 2, 5, 1, 6, 0, 7, 0, 32, 2, 34, 2, 129, 1, 133, 1, 160, 5, 161, 5, 518, 0, 519, 0, 546, 4, 550, 4, 645, 3, 647, 3, 672, 5, 673,\r\n      5, 674, 4, 677, 3, 678, 4, 679, 3, 680, 13, 681, 13, 682, 12, 685, 14, 686, 12, 687, 14, 712, 20, 714, 18, 809, 21, 813, 23, 840, 20, 841, 21,\r\n      1198, 19, 1199, 22, 1226, 18, 1230, 19, 1325, 23, 1327, 22, 1352, 15, 1353, 17, 1354, 15, 1357, 17, 1358, 16, 1359, 16, 1360, 11, 1361, 10,\r\n      1362, 11, 1365, 10, 1366, 9, 1367, 9, 1392, 11, 1394, 11, 1489, 10, 1493, 10, 1520, 8, 1521, 8, 1878, 9, 1879, 9, 1906, 7, 1910, 7, 2005, 6,\r\n      2007, 6, 2032, 8, 2033, 8, 2034, 7, 2037, 6, 2038, 7, 2039, 6,\r\n    ],\r\n    lookupPairs4D: [\r\n      0, 3, 1, 2, 2, 3, 5, 2, 6, 1, 7, 1, 8, 3, 9, 2, 10, 3, 13, 2, 16, 3, 18, 3, 22, 1, 23, 1, 24, 3, 26, 3, 33, 2, 37, 2, 38, 1, 39, 1, 41, 2, 45,\r\n      2, 54, 1, 55, 1, 56, 0, 57, 0, 58, 0, 59, 0, 60, 0, 61, 0, 62, 0, 63, 0, 256, 3, 258, 3, 264, 3, 266, 3, 272, 3, 274, 3, 280, 3, 282, 3, 2049,\r\n      2, 2053, 2, 2057, 2, 2061, 2, 2081, 2, 2085, 2, 2089, 2, 2093, 2, 2304, 9, 2305, 9, 2312, 9, 2313, 9, 16390, 1, 16391, 1, 16406, 1, 16407, 1,\r\n      16422, 1, 16423, 1, 16438, 1, 16439, 1, 16642, 8, 16646, 8, 16658, 8, 16662, 8, 18437, 6, 18439, 6, 18469, 6, 18471, 6, 18688, 9, 18689, 9,\r\n      18690, 8, 18693, 6, 18694, 8, 18695, 6, 18696, 9, 18697, 9, 18706, 8, 18710, 8, 18725, 6, 18727, 6, 131128, 0, 131129, 0, 131130, 0, 131131, 0,\r\n      131132, 0, 131133, 0, 131134, 0, 131135, 0, 131352, 7, 131354, 7, 131384, 7, 131386, 7, 133161, 5, 133165, 5, 133177, 5, 133181, 5, 133376, 9,\r\n      133377, 9, 133384, 9, 133385, 9, 133400, 7, 133402, 7, 133417, 5, 133421, 5, 133432, 7, 133433, 5, 133434, 7, 133437, 5, 147510, 4, 147511, 4,\r\n      147518, 4, 147519, 4, 147714, 8, 147718, 8, 147730, 8, 147734, 8, 147736, 7, 147738, 7, 147766, 4, 147767, 4, 147768, 7, 147770, 7, 147774, 4,\r\n      147775, 4, 149509, 6, 149511, 6, 149541, 6, 149543, 6, 149545, 5, 149549, 5, 149558, 4, 149559, 4, 149561, 5, 149565, 5, 149566, 4, 149567, 4,\r\n      149760, 9, 149761, 9, 149762, 8, 149765, 6, 149766, 8, 149767, 6, 149768, 9, 149769, 9, 149778, 8, 149782, 8, 149784, 7, 149786, 7, 149797, 6,\r\n      149799, 6, 149801, 5, 149805, 5, 149814, 4, 149815, 4, 149816, 7, 149817, 5, 149818, 7, 149821, 5, 149822, 4, 149823, 4, 149824, 37, 149825, 37,\r\n      149826, 36, 149829, 34, 149830, 36, 149831, 34, 149832, 37, 149833, 37, 149842, 36, 149846, 36, 149848, 35, 149850, 35, 149861, 34, 149863, 34,\r\n      149865, 33, 149869, 33, 149878, 32, 149879, 32, 149880, 35, 149881, 33, 149882, 35, 149885, 33, 149886, 32, 149887, 32, 150080, 49, 150082, 48,\r\n      150088, 49, 150098, 48, 150104, 47, 150106, 47, 151873, 46, 151877, 45, 151881, 46, 151909, 45, 151913, 44, 151917, 44, 152128, 49, 152129, 46,\r\n      152136, 49, 152137, 46, 166214, 43, 166215, 42, 166230, 43, 166247, 42, 166262, 41, 166263, 41, 166466, 48, 166470, 43, 166482, 48, 166486, 43,\r\n      168261, 45, 168263, 42, 168293, 45, 168295, 42, 168512, 31, 168513, 28, 168514, 31, 168517, 28, 168518, 25, 168519, 25, 280952, 40, 280953, 39,\r\n      280954, 40, 280957, 39, 280958, 38, 280959, 38, 281176, 47, 281178, 47, 281208, 40, 281210, 40, 282985, 44, 282989, 44, 283001, 39, 283005, 39,\r\n      283208, 30, 283209, 27, 283224, 30, 283241, 27, 283256, 22, 283257, 22, 297334, 41, 297335, 41, 297342, 38, 297343, 38, 297554, 29, 297558, 24,\r\n      297562, 29, 297590, 24, 297594, 21, 297598, 21, 299365, 26, 299367, 23, 299373, 26, 299383, 23, 299389, 20, 299391, 20, 299584, 31, 299585, 28,\r\n      299586, 31, 299589, 28, 299590, 25, 299591, 25, 299592, 30, 299593, 27, 299602, 29, 299606, 24, 299608, 30, 299610, 29, 299621, 26, 299623, 23,\r\n      299625, 27, 299629, 26, 299638, 24, 299639, 23, 299640, 22, 299641, 22, 299642, 21, 299645, 20, 299646, 21, 299647, 20, 299648, 61, 299649, 60,\r\n      299650, 61, 299653, 60, 299654, 59, 299655, 59, 299656, 58, 299657, 57, 299666, 55, 299670, 54, 299672, 58, 299674, 55, 299685, 52, 299687, 51,\r\n      299689, 57, 299693, 52, 299702, 54, 299703, 51, 299704, 56, 299705, 56, 299706, 53, 299709, 50, 299710, 53, 299711, 50, 299904, 61, 299906, 61,\r\n      299912, 58, 299922, 55, 299928, 58, 299930, 55, 301697, 60, 301701, 60, 301705, 57, 301733, 52, 301737, 57, 301741, 52, 301952, 79, 301953, 79,\r\n      301960, 76, 301961, 76, 316038, 59, 316039, 59, 316054, 54, 316071, 51, 316086, 54, 316087, 51, 316290, 78, 316294, 78, 316306, 73, 316310, 73,\r\n      318085, 77, 318087, 77, 318117, 70, 318119, 70, 318336, 79, 318337, 79, 318338, 78, 318341, 77, 318342, 78, 318343, 77, 430776, 56, 430777, 56,\r\n      430778, 53, 430781, 50, 430782, 53, 430783, 50, 431000, 75, 431002, 72, 431032, 75, 431034, 72, 432809, 74, 432813, 69, 432825, 74, 432829, 69,\r\n      433032, 76, 433033, 76, 433048, 75, 433065, 74, 433080, 75, 433081, 74, 447158, 71, 447159, 68, 447166, 71, 447167, 68, 447378, 73, 447382, 73,\r\n      447386, 72, 447414, 71, 447418, 72, 447422, 71, 449189, 70, 449191, 70, 449197, 69, 449207, 68, 449213, 69, 449215, 68, 449408, 67, 449409, 67,\r\n      449410, 66, 449413, 64, 449414, 66, 449415, 64, 449416, 67, 449417, 67, 449426, 66, 449430, 66, 449432, 65, 449434, 65, 449445, 64, 449447, 64,\r\n      449449, 63, 449453, 63, 449462, 62, 449463, 62, 449464, 65, 449465, 63, 449466, 65, 449469, 63, 449470, 62, 449471, 62, 449472, 19, 449473, 19,\r\n      449474, 18, 449477, 16, 449478, 18, 449479, 16, 449480, 19, 449481, 19, 449490, 18, 449494, 18, 449496, 17, 449498, 17, 449509, 16, 449511, 16,\r\n      449513, 15, 449517, 15, 449526, 14, 449527, 14, 449528, 17, 449529, 15, 449530, 17, 449533, 15, 449534, 14, 449535, 14, 449728, 19, 449729, 19,\r\n      449730, 18, 449734, 18, 449736, 19, 449737, 19, 449746, 18, 449750, 18, 449752, 17, 449754, 17, 449784, 17, 449786, 17, 451520, 19, 451521, 19,\r\n      451525, 16, 451527, 16, 451528, 19, 451529, 19, 451557, 16, 451559, 16, 451561, 15, 451565, 15, 451577, 15, 451581, 15, 451776, 19, 451777, 19,\r\n      451784, 19, 451785, 19, 465858, 18, 465861, 16, 465862, 18, 465863, 16, 465874, 18, 465878, 18, 465893, 16, 465895, 16, 465910, 14, 465911, 14,\r\n      465918, 14, 465919, 14, 466114, 18, 466118, 18, 466130, 18, 466134, 18, 467909, 16, 467911, 16, 467941, 16, 467943, 16, 468160, 13, 468161, 13,\r\n      468162, 13, 468163, 13, 468164, 13, 468165, 13, 468166, 13, 468167, 13, 580568, 17, 580570, 17, 580585, 15, 580589, 15, 580598, 14, 580599, 14,\r\n      580600, 17, 580601, 15, 580602, 17, 580605, 15, 580606, 14, 580607, 14, 580824, 17, 580826, 17, 580856, 17, 580858, 17, 582633, 15, 582637, 15,\r\n      582649, 15, 582653, 15, 582856, 12, 582857, 12, 582872, 12, 582873, 12, 582888, 12, 582889, 12, 582904, 12, 582905, 12, 596982, 14, 596983, 14,\r\n      596990, 14, 596991, 14, 597202, 11, 597206, 11, 597210, 11, 597214, 11, 597234, 11, 597238, 11, 597242, 11, 597246, 11, 599013, 10, 599015, 10,\r\n      599021, 10, 599023, 10, 599029, 10, 599031, 10, 599037, 10, 599039, 10, 599232, 13, 599233, 13, 599234, 13, 599235, 13, 599236, 13, 599237, 13,\r\n      599238, 13, 599239, 13, 599240, 12, 599241, 12, 599250, 11, 599254, 11, 599256, 12, 599257, 12, 599258, 11, 599262, 11, 599269, 10, 599271, 10,\r\n      599272, 12, 599273, 12, 599277, 10, 599279, 10, 599282, 11, 599285, 10, 599286, 11, 599287, 10, 599288, 12, 599289, 12, 599290, 11, 599293, 10,\r\n      599294, 11, 599295, 10,\r\n    ],\r\n    p2D: [0, 0, 1, -1, 0, 0, -1, 1, 0, 2, 1, 1, 1, 2, 2, 0, 1, 2, 0, 2, 1, 0, 0, 0],\r\n    p3D: [\r\n      0, 0, 1, -1, 0, 0, 1, 0, -1, 0, 0, -1, 1, 0, 0, 0, 1, -1, 0, 0, -1, 0, 1, 0, 0, -1, 1, 0, 2, 1, 1, 0, 1, 1, 1, -1, 0, 2, 1, 0, 1, 1, 1, -1, 1,\r\n      0, 2, 0, 1, 1, 1, -1, 1, 1, 1, 3, 2, 1, 0, 3, 1, 2, 0, 1, 3, 2, 0, 1, 3, 1, 0, 2, 1, 3, 0, 2, 1, 3, 0, 1, 2, 1, 1, 1, 0, 0, 2, 2, 0, 0, 1, 1, 0,\r\n      1, 0, 2, 0, 2, 0, 1, 1, 0, 0, 1, 2, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1, -1, 1, 2, 0, 0, 0, 0, 1, -1, 1, 1, 2, 0, 0, 0, 0, 1, 1, 1, -1, 2, 3, 1, 1, 1,\r\n      2, 0, 0, 2, 2, 3, 1, 1, 1, 2, 2, 0, 0, 2, 3, 1, 1, 1, 2, 0, 2, 0, 2, 1, 1, -1, 1, 2, 0, 0, 2, 2, 1, 1, -1, 1, 2, 2, 0, 0, 2, 1, -1, 1, 1, 2, 0,\r\n      0, 2, 2, 1, -1, 1, 1, 2, 0, 2, 0, 2, 1, 1, 1, -1, 2, 2, 0, 0, 2, 1, 1, 1, -1, 2, 0, 2, 0,\r\n    ],\r\n    p4D: [\r\n      0, 0, 1, -1, 0, 0, 0, 1, 0, -1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 0, 0, 1, -1, 0, 0, 0, 1, 0, -1, 0, 0, -1, 0, 1, 0, 0, 0, -1, 1, 0, 0, 0,\r\n      0, 1, -1, 0, 0, -1, 0, 0, 1, 0, 0, -1, 0, 1, 0, 0, 0, -1, 1, 0, 2, 1, 1, 0, 0, 1, 1, 1, -1, 0, 1, 1, 1, 0, -1, 0, 2, 1, 0, 1, 0, 1, 1, -1, 1, 0,\r\n      1, 1, 0, 1, -1, 0, 2, 0, 1, 1, 0, 1, -1, 1, 1, 0, 1, 0, 1, 1, -1, 0, 2, 1, 0, 0, 1, 1, 1, -1, 0, 1, 1, 1, 0, -1, 1, 0, 2, 0, 1, 0, 1, 1, -1, 1,\r\n      0, 1, 1, 0, 1, -1, 1, 0, 2, 0, 0, 1, 1, 1, -1, 0, 1, 1, 1, 0, -1, 1, 1, 1, 4, 2, 1, 1, 0, 4, 1, 2, 1, 0, 4, 1, 1, 2, 0, 1, 4, 2, 1, 0, 1, 4, 1,\r\n      2, 0, 1, 4, 1, 1, 0, 2, 1, 4, 2, 0, 1, 1, 4, 1, 0, 2, 1, 4, 1, 0, 1, 2, 1, 4, 0, 2, 1, 1, 4, 0, 1, 2, 1, 4, 0, 1, 1, 2, 1, 2, 1, 1, 0, 0, 3, 2,\r\n      1, 0, 0, 3, 1, 2, 0, 0, 1, 2, 1, 0, 1, 0, 3, 2, 0, 1, 0, 3, 1, 0, 2, 0, 1, 2, 0, 1, 1, 0, 3, 0, 2, 1, 0, 3, 0, 1, 2, 0, 1, 2, 1, 0, 0, 1, 3, 2,\r\n      0, 0, 1, 3, 1, 0, 0, 2, 1, 2, 0, 1, 0, 1, 3, 0, 2, 0, 1, 3, 0, 1, 0, 2, 1, 2, 0, 0, 1, 1, 3, 0, 0, 2, 1, 3, 0, 0, 1, 2, 2, 3, 1, 1, 1, 0, 2, 1,\r\n      1, 1, -1, 2, 2, 0, 0, 0, 2, 3, 1, 1, 0, 1, 2, 1, 1, -1, 1, 2, 2, 0, 0, 0, 2, 3, 1, 0, 1, 1, 2, 1, -1, 1, 1, 2, 2, 0, 0, 0, 2, 3, 1, 1, 1, 0, 2,\r\n      1, 1, 1, -1, 2, 0, 2, 0, 0, 2, 3, 1, 1, 0, 1, 2, 1, 1, -1, 1, 2, 0, 2, 0, 0, 2, 3, 0, 1, 1, 1, 2, -1, 1, 1, 1, 2, 0, 2, 0, 0, 2, 3, 1, 1, 1, 0,\r\n      2, 1, 1, 1, -1, 2, 0, 0, 2, 0, 2, 3, 1, 0, 1, 1, 2, 1, -1, 1, 1, 2, 0, 0, 2, 0, 2, 3, 0, 1, 1, 1, 2, -1, 1, 1, 1, 2, 0, 0, 2, 0, 2, 3, 1, 1, 0,\r\n      1, 2, 1, 1, -1, 1, 2, 0, 0, 0, 2, 2, 3, 1, 0, 1, 1, 2, 1, -1, 1, 1, 2, 0, 0, 0, 2, 2, 3, 0, 1, 1, 1, 2, -1, 1, 1, 1, 2, 0, 0, 0, 2, 2, 1, 1, 1,\r\n      -1, 0, 1, 1, 1, 0, -1, 0, 0, 0, 0, 0, 2, 1, 1, -1, 1, 0, 1, 1, 0, 1, -1, 0, 0, 0, 0, 0, 2, 1, -1, 1, 1, 0, 1, 0, 1, 1, -1, 0, 0, 0, 0, 0, 2, 1,\r\n      1, -1, 0, 1, 1, 1, 0, -1, 1, 0, 0, 0, 0, 0, 2, 1, -1, 1, 0, 1, 1, 0, 1, -1, 1, 0, 0, 0, 0, 0, 2, 1, -1, 0, 1, 1, 1, 0, -1, 1, 1, 0, 0, 0, 0, 0,\r\n      2, 1, 1, 1, -1, 0, 1, 1, 1, 0, -1, 2, 2, 0, 0, 0, 2, 1, 1, -1, 1, 0, 1, 1, 0, 1, -1, 2, 2, 0, 0, 0, 2, 1, 1, -1, 0, 1, 1, 1, 0, -1, 1, 2, 2, 0,\r\n      0, 0, 2, 1, 1, 1, -1, 0, 1, 1, 1, 0, -1, 2, 0, 2, 0, 0, 2, 1, -1, 1, 1, 0, 1, 0, 1, 1, -1, 2, 0, 2, 0, 0, 2, 1, -1, 1, 0, 1, 1, 0, 1, -1, 1, 2,\r\n      0, 2, 0, 0, 2, 1, 1, -1, 1, 0, 1, 1, 0, 1, -1, 2, 0, 0, 2, 0, 2, 1, -1, 1, 1, 0, 1, 0, 1, 1, -1, 2, 0, 0, 2, 0, 2, 1, -1, 0, 1, 1, 1, 0, -1, 1,\r\n      1, 2, 0, 0, 2, 0, 2, 1, 1, -1, 0, 1, 1, 1, 0, -1, 1, 2, 0, 0, 0, 2, 2, 1, -1, 1, 0, 1, 1, 0, 1, -1, 1, 2, 0, 0, 0, 2, 2, 1, -1, 0, 1, 1, 1, 0,\r\n      -1, 1, 1, 2, 0, 0, 0, 2, 3, 1, 1, 0, 0, 0, 2, 2, 0, 0, 0, 2, 1, 1, 1, -1, 3, 1, 0, 1, 0, 0, 2, 0, 2, 0, 0, 2, 1, 1, 1, -1, 3, 1, 0, 0, 1, 0, 2,\r\n      0, 0, 2, 0, 2, 1, 1, 1, -1, 3, 1, 1, 0, 0, 0, 2, 2, 0, 0, 0, 2, 1, 1, -1, 1, 3, 1, 0, 1, 0, 0, 2, 0, 2, 0, 0, 2, 1, 1, -1, 1, 3, 1, 0, 0, 0, 1,\r\n      2, 0, 0, 0, 2, 2, 1, 1, -1, 1, 3, 1, 1, 0, 0, 0, 2, 2, 0, 0, 0, 2, 1, -1, 1, 1, 3, 1, 0, 0, 1, 0, 2, 0, 0, 2, 0, 2, 1, -1, 1, 1, 3, 1, 0, 0, 0,\r\n      1, 2, 0, 0, 0, 2, 2, 1, -1, 1, 1, 3, 1, 0, 1, 0, 0, 2, 0, 2, 0, 0, 2, -1, 1, 1, 1, 3, 1, 0, 0, 1, 0, 2, 0, 0, 2, 0, 2, -1, 1, 1, 1, 3, 1, 0, 0,\r\n      0, 1, 2, 0, 0, 0, 2, 2, -1, 1, 1, 1, 3, 3, 2, 1, 0, 0, 3, 1, 2, 0, 0, 4, 1, 1, 1, 1, 3, 3, 2, 0, 1, 0, 3, 1, 0, 2, 0, 4, 1, 1, 1, 1, 3, 3, 0, 2,\r\n      1, 0, 3, 0, 1, 2, 0, 4, 1, 1, 1, 1, 3, 3, 2, 0, 0, 1, 3, 1, 0, 0, 2, 4, 1, 1, 1, 1, 3, 3, 0, 2, 0, 1, 3, 0, 1, 0, 2, 4, 1, 1, 1, 1, 3, 3, 0, 0,\r\n      2, 1, 3, 0, 0, 1, 2, 4, 1, 1, 1, 1, 3, 3, 2, 1, 0, 0, 3, 1, 2, 0, 0, 2, 1, 1, 1, -1, 3, 3, 2, 0, 1, 0, 3, 1, 0, 2, 0, 2, 1, 1, 1, -1, 3, 3, 0,\r\n      2, 1, 0, 3, 0, 1, 2, 0, 2, 1, 1, 1, -1, 3, 3, 2, 1, 0, 0, 3, 1, 2, 0, 0, 2, 1, 1, -1, 1, 3, 3, 2, 0, 0, 1, 3, 1, 0, 0, 2, 2, 1, 1, -1, 1, 3, 3,\r\n      0, 2, 0, 1, 3, 0, 1, 0, 2, 2, 1, 1, -1, 1, 3, 3, 2, 0, 1, 0, 3, 1, 0, 2, 0, 2, 1, -1, 1, 1, 3, 3, 2, 0, 0, 1, 3, 1, 0, 0, 2, 2, 1, -1, 1, 1, 3,\r\n      3, 0, 0, 2, 1, 3, 0, 0, 1, 2, 2, 1, -1, 1, 1, 3, 3, 0, 2, 1, 0, 3, 0, 1, 2, 0, 2, -1, 1, 1, 1, 3, 3, 0, 2, 0, 1, 3, 0, 1, 0, 2, 2, -1, 1, 1, 1,\r\n      3, 3, 0, 0, 2, 1, 3, 0, 0, 1, 2, 2, -1, 1, 1, 1,\r\n    ],\r\n  };\r\n\r\n  var Contribution2 = /** @class */ (function () {\r\n    function Contribution2(multiplier, xsb, ysb) {\r\n      this.dx = -xsb - multiplier * constants_1.SQUISH_2D;\r\n      this.dy = -ysb - multiplier * constants_1.SQUISH_2D;\r\n      this.xsb = xsb;\r\n      this.ysb = ysb;\r\n    }\r\n    return Contribution2;\r\n  })();\r\n  var Contribution3 = /** @class */ (function () {\r\n    function Contribution3(multiplier, xsb, ysb, zsb) {\r\n      this.dx = -xsb - multiplier * constants_1.SQUISH_3D;\r\n      this.dy = -ysb - multiplier * constants_1.SQUISH_3D;\r\n      this.dz = -zsb - multiplier * constants_1.SQUISH_3D;\r\n      this.xsb = xsb;\r\n      this.ysb = ysb;\r\n      this.zsb = zsb;\r\n    }\r\n    return Contribution3;\r\n  })();\r\n  var Contribution4 = /** @class */ (function () {\r\n    function Contribution4(multiplier, xsb, ysb, zsb, wsb) {\r\n      this.dx = -xsb - multiplier * constants_1.SQUISH_4D;\r\n      this.dy = -ysb - multiplier * constants_1.SQUISH_4D;\r\n      this.dz = -zsb - multiplier * constants_1.SQUISH_4D;\r\n      this.dw = -wsb - multiplier * constants_1.SQUISH_4D;\r\n      this.xsb = xsb;\r\n      this.ysb = ysb;\r\n      this.zsb = zsb;\r\n      this.wsb = wsb;\r\n    }\r\n    return Contribution4;\r\n  })();\r\n  function shuffleSeed(seed) {\r\n    var newSeed = new Uint32Array(1);\r\n    newSeed[0] = seed[0] * 1664525 + 1013904223;\r\n    return newSeed;\r\n  }\r\n  OpenSimplexNoise = /** @class */ (function () {\r\n    function OpenSimplexNoise(clientSeed) {\r\n      this.initialize();\r\n      this.perm = new Uint8Array(256);\r\n      this.perm2D = new Uint8Array(256);\r\n      this.perm3D = new Uint8Array(256);\r\n      this.perm4D = new Uint8Array(256);\r\n      var source = new Uint8Array(256);\r\n      for (var i = 0; i < 256; i++) source[i] = i;\r\n      var seed = new Uint32Array(1);\r\n      seed[0] = clientSeed;\r\n      seed = shuffleSeed(shuffleSeed(shuffleSeed(seed)));\r\n      for (var i = 255; i >= 0; i--) {\r\n        seed = shuffleSeed(seed);\r\n        var r = new Uint32Array(1);\r\n        r[0] = (seed[0] + 31) % (i + 1);\r\n        if (r[0] < 0) r[0] += i + 1;\r\n        this.perm[i] = source[r[0]];\r\n        this.perm2D[i] = this.perm[i] & 0x0e;\r\n        this.perm3D[i] = (this.perm[i] % 24) * 3;\r\n        this.perm4D[i] = this.perm[i] & 0xfc;\r\n        source[r[0]] = source[i];\r\n      }\r\n    }\r\n    OpenSimplexNoise.prototype.array2D = function (width, height) {\r\n      var output = new Array(width);\r\n      for (var x = 0; x < width; x++) {\r\n        output[x] = new Array(height);\r\n        for (var y = 0; y < height; y++) {\r\n          output[x][y] = this.noise2D(x, y);\r\n        }\r\n      }\r\n      return output;\r\n    };\r\n    OpenSimplexNoise.prototype.array3D = function (width, height, depth) {\r\n      var output = new Array(width);\r\n      for (var x = 0; x < width; x++) {\r\n        output[x] = new Array(height);\r\n        for (var y = 0; y < height; y++) {\r\n          output[x][y] = new Array(depth);\r\n          for (var z = 0; z < depth; z++) {\r\n            output[x][y][z] = this.noise3D(x, y, z);\r\n          }\r\n        }\r\n      }\r\n      return output;\r\n    };\r\n    OpenSimplexNoise.prototype.array4D = function (width, height, depth, wLength) {\r\n      var output = new Array(width);\r\n      for (var x = 0; x < width; x++) {\r\n        output[x] = new Array(height);\r\n        for (var y = 0; y < height; y++) {\r\n          output[x][y] = new Array(depth);\r\n          for (var z = 0; z < depth; z++) {\r\n            output[x][y][z] = new Array(wLength);\r\n            for (var w = 0; w < wLength; w++) {\r\n              output[x][y][z][w] = this.noise4D(x, y, z, w);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return output;\r\n    };\r\n    OpenSimplexNoise.prototype.noise2D = function (x, y) {\r\n      var stretchOffset = (x + y) * constants_1.STRETCH_2D;\r\n      var xs = x + stretchOffset;\r\n      var ys = y + stretchOffset;\r\n      var xsb = Math.floor(xs);\r\n      var ysb = Math.floor(ys);\r\n      var squishOffset = (xsb + ysb) * constants_1.SQUISH_2D;\r\n      var dx0 = x - (xsb + squishOffset);\r\n      var dy0 = y - (ysb + squishOffset);\r\n      var xins = xs - xsb;\r\n      var yins = ys - ysb;\r\n      var inSum = xins + yins;\r\n      var hash = (xins - yins + 1) | (inSum << 1) | ((inSum + yins) << 2) | ((inSum + xins) << 4);\r\n      var value = 0;\r\n      for (var c = this.lookup2D[hash]; c !== undefined; c = c.next) {\r\n        var dx = dx0 + c.dx;\r\n        var dy = dy0 + c.dy;\r\n        var attn = 2 - dx * dx - dy * dy;\r\n        if (attn > 0) {\r\n          var px = xsb + c.xsb;\r\n          var py = ysb + c.ysb;\r\n          var indexPartA = this.perm[px & 0xff];\r\n          var index = this.perm2D[(indexPartA + py) & 0xff];\r\n          var valuePart = constants_1.gradients2D[index] * dx + constants_1.gradients2D[index + 1] * dy;\r\n          value += attn * attn * attn * attn * valuePart;\r\n        }\r\n      }\r\n      return value * constants_1.NORM_2D;\r\n    };\r\n    OpenSimplexNoise.prototype.noise3D = function (x, y, z) {\r\n      var stretchOffset = (x + y + z) * constants_1.STRETCH_3D;\r\n      var xs = x + stretchOffset;\r\n      var ys = y + stretchOffset;\r\n      var zs = z + stretchOffset;\r\n      var xsb = Math.floor(xs);\r\n      var ysb = Math.floor(ys);\r\n      var zsb = Math.floor(zs);\r\n      var squishOffset = (xsb + ysb + zsb) * constants_1.SQUISH_3D;\r\n      var dx0 = x - (xsb + squishOffset);\r\n      var dy0 = y - (ysb + squishOffset);\r\n      var dz0 = z - (zsb + squishOffset);\r\n      var xins = xs - xsb;\r\n      var yins = ys - ysb;\r\n      var zins = zs - zsb;\r\n      var inSum = xins + yins + zins;\r\n      var hash =\r\n        (yins - zins + 1) |\r\n        ((xins - yins + 1) << 1) |\r\n        ((xins - zins + 1) << 2) |\r\n        (inSum << 3) |\r\n        ((inSum + zins) << 5) |\r\n        ((inSum + yins) << 7) |\r\n        ((inSum + xins) << 9);\r\n      var value = 0;\r\n      for (var c = this.lookup3D[hash]; c !== undefined; c = c.next) {\r\n        var dx = dx0 + c.dx;\r\n        var dy = dy0 + c.dy;\r\n        var dz = dz0 + c.dz;\r\n        var attn = 2 - dx * dx - dy * dy - dz * dz;\r\n        if (attn > 0) {\r\n          var px = xsb + c.xsb;\r\n          var py = ysb + c.ysb;\r\n          var pz = zsb + c.zsb;\r\n          var indexPartA = this.perm[px & 0xff];\r\n          var indexPartB = this.perm[(indexPartA + py) & 0xff];\r\n          var index = this.perm3D[(indexPartB + pz) & 0xff];\r\n          var valuePart = constants_1.gradients3D[index] * dx + constants_1.gradients3D[index + 1] * dy + constants_1.gradients3D[index + 2] * dz;\r\n          value += attn * attn * attn * attn * valuePart;\r\n        }\r\n      }\r\n      return value * constants_1.NORM_3D;\r\n    };\r\n    OpenSimplexNoise.prototype.noise4D = function (x, y, z, w) {\r\n      var stretchOffset = (x + y + z + w) * constants_1.STRETCH_4D;\r\n      var xs = x + stretchOffset;\r\n      var ys = y + stretchOffset;\r\n      var zs = z + stretchOffset;\r\n      var ws = w + stretchOffset;\r\n      var xsb = Math.floor(xs);\r\n      var ysb = Math.floor(ys);\r\n      var zsb = Math.floor(zs);\r\n      var wsb = Math.floor(ws);\r\n      var squishOffset = (xsb + ysb + zsb + wsb) * constants_1.SQUISH_4D;\r\n      var dx0 = x - (xsb + squishOffset);\r\n      var dy0 = y - (ysb + squishOffset);\r\n      var dz0 = z - (zsb + squishOffset);\r\n      var dw0 = w - (wsb + squishOffset);\r\n      var xins = xs - xsb;\r\n      var yins = ys - ysb;\r\n      var zins = zs - zsb;\r\n      var wins = ws - wsb;\r\n      var inSum = xins + yins + zins + wins;\r\n      var hash =\r\n        (zins - wins + 1) |\r\n        ((yins - zins + 1) << 1) |\r\n        ((yins - wins + 1) << 2) |\r\n        ((xins - yins + 1) << 3) |\r\n        ((xins - zins + 1) << 4) |\r\n        ((xins - wins + 1) << 5) |\r\n        (inSum << 6) |\r\n        ((inSum + wins) << 8) |\r\n        ((inSum + zins) << 11) |\r\n        ((inSum + yins) << 14) |\r\n        ((inSum + xins) << 17);\r\n      var value = 0;\r\n      for (var c = this.lookup4D[hash]; c !== undefined; c = c.next) {\r\n        var dx = dx0 + c.dx;\r\n        var dy = dy0 + c.dy;\r\n        var dz = dz0 + c.dz;\r\n        var dw = dw0 + c.dw;\r\n        var attn = 2 - dx * dx - dy * dy - dz * dz - dw * dw;\r\n        if (attn > 0) {\r\n          var px = xsb + c.xsb;\r\n          var py = ysb + c.ysb;\r\n          var pz = zsb + c.zsb;\r\n          var pw = wsb + c.wsb;\r\n          var indexPartA = this.perm[px & 0xff];\r\n          var indexPartB = this.perm[(indexPartA + py) & 0xff];\r\n          var indexPartC = this.perm[(indexPartB + pz) & 0xff];\r\n          var index = this.perm4D[(indexPartC + pw) & 0xff];\r\n          var valuePart =\r\n            constants_1.gradients4D[index] * dx +\r\n            constants_1.gradients4D[index + 1] * dy +\r\n            constants_1.gradients4D[index + 2] * dz +\r\n            constants_1.gradients4D[index + 3] * dw;\r\n          value += attn * attn * attn * attn * valuePart;\r\n        }\r\n      }\r\n      return value * constants_1.NORM_4D;\r\n    };\r\n    OpenSimplexNoise.prototype.initialize = function () {\r\n      var contributions2D = [];\r\n      for (var i = 0; i < constants_1.p2D.length; i += 4) {\r\n        var baseSet = constants_1.base2D[constants_1.p2D[i]];\r\n        var previous = null;\r\n        var current = null;\r\n        for (var k = 0; k < baseSet.length; k += 3) {\r\n          current = new Contribution2(baseSet[k], baseSet[k + 1], baseSet[k + 2]);\r\n          if (previous === null) contributions2D[i / 4] = current;\r\n          else previous.next = current;\r\n          previous = current;\r\n        }\r\n        current.next = new Contribution2(constants_1.p2D[i + 1], constants_1.p2D[i + 2], constants_1.p2D[i + 3]);\r\n      }\r\n      this.lookup2D = [];\r\n      for (var i = 0; i < constants_1.lookupPairs2D.length; i += 2) {\r\n        this.lookup2D[constants_1.lookupPairs2D[i]] = contributions2D[constants_1.lookupPairs2D[i + 1]];\r\n      }\r\n      var contributions3D = [];\r\n      for (var i = 0; i < constants_1.p3D.length; i += 9) {\r\n        var baseSet = constants_1.base3D[constants_1.p3D[i]];\r\n        var previous = null;\r\n        var current = null;\r\n        for (var k = 0; k < baseSet.length; k += 4) {\r\n          current = new Contribution3(baseSet[k], baseSet[k + 1], baseSet[k + 2], baseSet[k + 3]);\r\n          if (previous === null) contributions3D[i / 9] = current;\r\n          else previous.next = current;\r\n          previous = current;\r\n        }\r\n        current.next = new Contribution3(constants_1.p3D[i + 1], constants_1.p3D[i + 2], constants_1.p3D[i + 3], constants_1.p3D[i + 4]);\r\n        current.next.next = new Contribution3(constants_1.p3D[i + 5], constants_1.p3D[i + 6], constants_1.p3D[i + 7], constants_1.p3D[i + 8]);\r\n      }\r\n      this.lookup3D = [];\r\n      for (var i = 0; i < constants_1.lookupPairs3D.length; i += 2) {\r\n        this.lookup3D[constants_1.lookupPairs3D[i]] = contributions3D[constants_1.lookupPairs3D[i + 1]];\r\n      }\r\n      var contributions4D = [];\r\n      for (var i = 0; i < constants_1.p4D.length; i += 16) {\r\n        var baseSet = constants_1.base4D[constants_1.p4D[i]];\r\n        var previous = null;\r\n        var current = null;\r\n        for (var k = 0; k < baseSet.length; k += 5) {\r\n          current = new Contribution4(baseSet[k], baseSet[k + 1], baseSet[k + 2], baseSet[k + 3], baseSet[k + 4]);\r\n          if (previous === null) contributions4D[i / 16] = current;\r\n          else previous.next = current;\r\n          previous = current;\r\n        }\r\n        current.next = new Contribution4(\r\n          constants_1.p4D[i + 1],\r\n          constants_1.p4D[i + 2],\r\n          constants_1.p4D[i + 3],\r\n          constants_1.p4D[i + 4],\r\n          constants_1.p4D[i + 5]\r\n        );\r\n        current.next.next = new Contribution4(\r\n          constants_1.p4D[i + 6],\r\n          constants_1.p4D[i + 7],\r\n          constants_1.p4D[i + 8],\r\n          constants_1.p4D[i + 9],\r\n          constants_1.p4D[i + 10]\r\n        );\r\n        current.next.next.next = new Contribution4(\r\n          constants_1.p4D[i + 11],\r\n          constants_1.p4D[i + 12],\r\n          constants_1.p4D[i + 13],\r\n          constants_1.p4D[i + 14],\r\n          constants_1.p4D[i + 15]\r\n        );\r\n      }\r\n      this.lookup4D = [];\r\n      for (var i = 0; i < constants_1.lookupPairs4D.length; i += 2) {\r\n        this.lookup4D[constants_1.lookupPairs4D[i]] = contributions4D[constants_1.lookupPairs4D[i + 1]];\r\n      }\r\n    };\r\n    return OpenSimplexNoise;\r\n  })();\r\n})();\r\nexport default OpenSimplexNoise;\r\n","import \"./sketch.css\";\r\nimport { useEffect } from \"react\";\r\nimport OpenSimplexNoise from \"./OpenSimplexNoise\";\r\nimport p5 from \"p5\";\r\n\r\nconst BlobBG = () => {\r\n  let w = 0;\r\n  let h = 0;\r\n  let noise;\r\n\r\n  let NO_BLOBS = 12;\r\n  let blobs = new Array(NO_BLOBS);\r\n\r\n  const totalFrames = 720;\r\n  let counter = 0;\r\n\r\n  const p = (p5) => {\r\n    p5.setup = (canvasParentRef) => {\r\n      counter = p5.radians(1);\r\n      noise = new OpenSimplexNoise(1000);\r\n      w = p5.windowWidth;\r\n      h = p5.windowHeight;\r\n\r\n      p5.createCanvas(w, h).parent(canvasParentRef);\r\n      console.log(w, h);\r\n\r\n      for (let i = 0; i < NO_BLOBS; i++) {\r\n        blobs.push(new blobby(p5));\r\n      }\r\n    };\r\n\r\n    p5.draw = () => {\r\n      p5.background(255);\r\n      p5.drawingContext.filter = \"blur(200px) opacity(5%)\";\r\n      let percent = (counter % totalFrames) / totalFrames;\r\n      render(percent, p5);\r\n      // console.log(frameRate());\r\n\r\n      counter++;\r\n    };\r\n\r\n    const render = (percent) => {\r\n      let a = percent * p5.TWO_PI;\r\n      blobs.forEach((blob) => blob.render(a, p5));\r\n    };\r\n\r\n    class sNoiseLoop {\r\n      constructor(radius, min, max) {\r\n        this.radius = radius;\r\n        this.min = min;\r\n        this.max = max;\r\n        this.offsetX = p5.random(0, w * 2);\r\n        this.offsetY = p5.random(0, h * 2);\r\n      }\r\n\r\n      val(step) {\r\n        let noiseOut = noise.noise2D(this.offsetX + this.radius * p5.cos(step), this.offsetY + this.radius * p5.sin(step));\r\n        return p5.map(noiseOut, -1, 1, this.min - this.max / 7, this.max + this.max / 7);\r\n      }\r\n    }\r\n\r\n    class blobby {\r\n      colorMap = [\"#AF72FF\", \"#FF37BB\", \"#FF9900\"];\r\n      noiseMax = 1;\r\n      constructor() {\r\n        this.x = new sNoiseLoop(0.2, 0, w, p5);\r\n        this.y = new sNoiseLoop(0.2, 0, h, p5);\r\n        this.r = new sNoiseLoop(1.5, 150, 200, p5);\r\n        this.xOffset = new sNoiseLoop(1.5, -50, 50, p5);\r\n        this.yOffset = new sNoiseLoop(1.5, -10, 10, p5);\r\n        this.color = this.colorMap[Math.floor(Math.random() * this.colorMap.length)];\r\n        this.phase = p5.random(p5.radians(5));\r\n      }\r\n\r\n      render(step) {\r\n        p5.push();\r\n        p5.translate(this.x.val(step), this.y.val(step));\r\n        p5.noStroke();\r\n        p5.fill(this.color);\r\n        p5.beginShape();\r\n\r\n        for (let a = 0; a < p5.TWO_PI; a += p5.radians(5)) {\r\n          let xoff = this.r.val(step) * p5.cos(a + this.phase) + this.xOffset.val(a);\r\n          let yoff = this.r.val(step) * p5.sin(a + this.phase) + this.yOffset.val(a);\r\n          p5.vertex(xoff, yoff);\r\n        }\r\n\r\n        p5.endShape(p5.CLOSE);\r\n        p5.pop();\r\n        this.phase += 0.003;\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    new p5(p);\r\n  }, []);\r\n  return;\r\n};\r\n\r\nexport default BlobBG;\r\n"],"names":["OpenSimplexNoise","constants_1","NORM_2D","NORM_3D","NORM_4D","SQUISH_2D","Math","sqrt","SQUISH_3D","SQUISH_4D","STRETCH_2D","STRETCH_3D","STRETCH_4D","base2D","base3D","base4D","gradients2D","gradients3D","gradients4D","lookupPairs2D","lookupPairs3D","lookupPairs4D","p2D","p3D","p4D","Contribution2","multiplier","xsb","ysb","this","dx","dy","Contribution3","zsb","dz","Contribution4","wsb","dw","shuffleSeed","seed","newSeed","Uint32Array","clientSeed","initialize","perm","Uint8Array","perm2D","perm3D","perm4D","source","i","r","prototype","array2D","width","height","output","Array","x","y","noise2D","array3D","depth","z","noise3D","array4D","wLength","w","noise4D","stretchOffset","xs","ys","floor","squishOffset","dx0","dy0","xins","yins","inSum","hash","value","c","lookup2D","undefined","next","attn","px","py","indexPartA","index","zs","dz0","zins","lookup3D","pz","indexPartB","ws","dw0","wins","lookup4D","pw","indexPartC","contributions2D","length","baseSet","previous","current","k","contributions3D","contributions4D","noise","h","blobs","counter","p","p5","setup","canvasParentRef","radians","windowWidth","windowHeight","createCanvas","parent","console","log","push","blobby","draw","background","drawingContext","filter","render","percent","a","TWO_PI","forEach","blob","sNoiseLoop","radius","min","max","offsetX","random","offsetY","step","noiseOut","cos","sin","map","colorMap","noiseMax","xOffset","yOffset","color","phase","translate","val","noStroke","fill","beginShape","xoff","yoff","vertex","endShape","CLOSE","pop","useEffect"],"sourceRoot":""}